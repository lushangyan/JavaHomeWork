spring:
  shardingsphere:
    props:
      sql:
        show:
          true
    datasource:
      names: db-0,db-1
      db-0:
        type: com.zaxxer.hikari.HikariDataSource
#        driverClassName: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/db-0
        username: root
        password:
      db-1:
        type: com.zaxxer.hikari.HikariDataSource
#        driverClassName: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/db-1
        username: root
        password:
    sharding:
      tables:
        # 逻辑表名
        orders:
          #该配置在查询的时候起作用
          actualDataNodes: db-0.orders_$->{[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30]},db-1.orders_$->{[1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31]}
          keyGenerator:
            column: id
            type: SNOWFLAKE
          databaseStrategy:
            inline:
              algorithmExpression: db-$->{id % 2}
              shardingColumn: id
          tableStrategy:
            inline:
              algorithmExpression: orders_$->{id % 32}
              shardingColumn: id
logging:
  level:
    root: info
    org.springframework.jdbc.core: info